# Production linux config that blends PHP (on /) with Ruby (on /frontend).
# Author: Jordan Ritter <jpr5@darkridge.com>

# These upstream definitions are just labels (not actually hostnames)
# for proxy_pass - we simply name them after the hostnames they proxy
# for (proxy_pass http://$host$request_uri).  However, if you map more
# than one subURL per host to different apps, they will all
# technically be the same hostname, so you'll need to use different
# labels.

upstream frontend { server unix:/srv/socks/frontend.sock fail_timeout=0; }
upstream api      { server unix:/srv/socks/api.sock fail_timeout=0; }

###
### Nginx New Relic Agent
###

server {
    server_name 127.0.0.1;

    listen 80;

    location = /status {
        stub_status;
        allow 127.0.0.1;
        deny all;
    }
}

###
### Main website (frontend)
###

server {
    server_name www.yourmom.com;

    listen 80 default_server;
    listen 443 ssl default_server;

    ssl_certificate /etc/ssl/www.yourmom.com.chained.crt;
    ssl_certificate_key /etc/ssl/www.yourmom.com.key;
    ssl_dhparam /etc/ssl/dhparam.pem;

    ssl_protocols SSLv3 TLSv1.2 TLSv1.1 TLSv1;
    ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
    ssl_prefer_server_ciphers on;

    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:20m;

    ssl_stapling on;
    ssl_stapling_verify on;


    ###
    ### General
    ###

    gzip on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    location ~ /\. {
        deny all;
    }

    location ~*  \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 7d;
    }

    if ($host !~ ^www.*$) {
        rewrite ^(.*) $scheme://www.$host$1 permanent;
    }

    ###
    ### PHP
    ###

    index index.php;
    root /srv/www/www.yourmom.com;

    location / {
        try_files $uri $uri/ @php_rewrite;
    }

    location ~* \.php$ {
        fastcgi_pass                 unix:/var/run/php/php5.3-fpm.sock;
        include                      fastcgi_params;
        fastcgi_param                SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param                SCRIPT_NAME     $fastcgi_script_name;
        fastcgi_buffer_size          128k;
        fastcgi_buffers              256 16k;
        fastcgi_busy_buffers_size    256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_read_timeout         300s;
    }

    ###
    ### Ruby
    ###

    location @proxy_to_frontend {
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header    X-Uri $uri;
        proxy_set_header    Host $http_host;
        proxy_redirect      off;
        proxy_pass          http://frontend$request_uri; # hits: upstream $host {..}
    }

    location @proxy_to_api {
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header    X-Uri $uri;
        proxy_set_header    Host $http_host;
        proxy_redirect      off;
        proxy_pass          http://api$request_uri; # hits: upstream $host {..}
    }

    # All our main assets have digest-ed filenames, so no need to
    # implement any sort of cache policy here.
    location /frontend {
        alias /srv/src/apps/frontend/public;
        try_files $uri @proxy_to_frontend;

        # TODO: This works with general 500s, and
        # /assets/not_here.html=404.  Doesn't work for /not_here.html=404;
        # need to figure this out.
        error_page 404 /frontend/assets/404.html;
        error_page 500 502 503 504 /frontend/assets/500.html;
    }

    # Enable this to hit the subURL with additional headers/cache expiry.
    location ^~ /frontend/assets  {
        alias /srv/src/apps/frontend/public/assets;

        expires 1y;
        add_header Cache-Control public;
        add_header ETag "";
        break;
    }

}


###
### API (api.yourmom.com)
###

server {
    listen 80;
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name api.yourmom.com api.staging.yourmom.com;

    # PRODvSTAGING done via softlinks to correct SSL certs
    ssl_certificate /etc/ssl/yourmom.com.chained.crt;
    ssl_certificate_key /etc/ssl/yourmom.com.key;

    ssl_dhparam /etc/ssl/dhparam.pem;

    ssl_protocols SSLv3 TLSv1.2 TLSv1.1 TLSv1;
    ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
    ssl_prefer_server_ciphers on;

    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:20m;

    ssl_stapling on;
    ssl_stapling_verify on;

    root /srv/www/api.yourmom.com/public;

    location @api {
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header    X-Uri $uri;
        proxy_set_header    Host $http_host;
        proxy_redirect      off;
        proxy_pass          http://api$request_uri; # hits: upstream $host {..}
    }

    location / {
        alias /srv/src/apps/api/public;
        try_files $uri @api;
    }
}
